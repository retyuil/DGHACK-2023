import cv2
import numpy as np
import requests
import time

cookie = "ee9f4ce7-75d2-4fff-84bc-97ffe507d674"
url = "https://infinitemoneyglitch.chall.malicecyber.com/video"
headers = {"cookie" : "token="+cookie}


img_0 = cv2.imread('C:/Users/maell/Desktop/CTF/CTF/DGHACK2023/Infinite money glitch/num/0.jpg')
img_1 = cv2.imread('C:/Users/maell/Desktop/CTF/CTF/DGHACK2023/Infinite money glitch/num/1.jpg')
img_2 = cv2.imread('C:/Users/maell/Desktop/CTF/CTF/DGHACK2023/Infinite money glitch/num/2.jpg')
img_3 = cv2.imread('C:/Users/maell/Desktop/CTF/CTF/DGHACK2023/Infinite money glitch/num/3.jpg')
img_4 = cv2.imread('C:/Users/maell/Desktop/CTF/CTF/DGHACK2023/Infinite money glitch/num/4.jpg')
img_5 = cv2.imread('C:/Users/maell/Desktop/CTF/CTF/DGHACK2023/Infinite money glitch/num/5.jpg')
img_6 = cv2.imread('C:/Users/maell/Desktop/CTF/CTF/DGHACK2023/Infinite money glitch/num/6.jpg')
img_7 = cv2.imread('C:/Users/maell/Desktop/CTF/CTF/DGHACK2023/Infinite money glitch/num/7.jpg')
img_8 = cv2.imread('C:/Users/maell/Desktop/CTF/CTF/DGHACK2023/Infinite money glitch/num/8.png')

def extract_code(video):

  vidcap = cv2.VideoCapture(video)
  success,image = vidcap.read()

  cpt = 0

  while success:
    #cv2.imwrite("C:/Users/maell/Desktop/CTF/CTF/DGHACK2023/Infinite money glitch/frames/" + str(cpt) + ".png",image)
    cpt += 1
    if cpt % 120 == 0:
      print(cpt)
      threshold = 0.99999
      res0 = cv2.matchTemplate(image, img_0, cv2.TM_CCOEFF_NORMED)
      res1 = cv2.matchTemplate(image, img_1, cv2.TM_CCOEFF_NORMED)
      res2 = cv2.matchTemplate(image, img_2, cv2.TM_CCOEFF_NORMED)
      res3 = cv2.matchTemplate(image, img_3, cv2.TM_CCOEFF_NORMED)
      res4 = cv2.matchTemplate(image, img_4, cv2.TM_CCOEFF_NORMED)
      res5 = cv2.matchTemplate(image, img_5, cv2.TM_CCOEFF_NORMED)
      res6 = cv2.matchTemplate(image, img_6, cv2.TM_CCOEFF_NORMED)
      res7 = cv2.matchTemplate(image, img_7, cv2.TM_CCOEFF_NORMED)
      res8 = cv2.matchTemplate(image, img_8, cv2.TM_CCOEFF_NORMED)

      loc0 = np.where(res0 >= threshold)
      loc1 = np.where(res1 >= threshold)
      loc2 = np.where(res2 >= threshold)
      loc3 = np.where(res3 >= threshold)
      loc4 = np.where(res4 >= threshold)
      loc5 = np.where(res5 >= threshold)
      loc6 = np.where(res6 >= threshold)
      loc7 = np.where(res7 >= threshold)
      loc8 = np.where(res8 >= threshold)



      threshold = .9
      loc0 = np.where(res0 >= threshold)
      loc1 = np.where(res1 >= threshold)
      loc2 = np.where(res2 >= threshold)
      loc3 = np.where(res3 >= threshold)
      loc4 = np.where(res4 >= threshold)
      loc5 = np.where(res5 >= threshold)
      loc6 = np.where(res6 >= threshold)
      loc7 = np.where(res7 >= threshold)
      loc8 = np.where(res8 >= threshold)



      if (loc0[0].size or loc1[0].size or loc2[0].size or loc3[0].size or loc4[0].size or loc5[0].size or loc6[0].size or loc7[0].size or loc8[0].size) > 0:
        break
    success,image = vidcap.read()
    #print(cpt)


  non_empty_loc = {}

  non_empty_loc["0"] = []
  non_empty_loc["1"] = []
  non_empty_loc["2"] = []
  non_empty_loc["3"] = []
  non_empty_loc["4"] = []
  non_empty_loc["5"] = []
  non_empty_loc["6"] = []
  non_empty_loc["7"] = []
  non_empty_loc["8"] = []

  if loc0[0].size > 0:
    for elem in loc0[1]:
      if (elem+1) not in loc0[1]:
        non_empty_loc["0"].append(elem)
  if loc1[0].size > 0:
    for elem in loc1[1]:
      if (elem+1) not in loc1[1]:
        non_empty_loc["1"].append(elem)
  if loc2[0].size > 0:
    for elem in loc2[1]:
      if (elem+1) not in loc2[1]:
        non_empty_loc["2"].append(elem)
  if loc3[0].size > 0:
    for elem in loc3[1]:
      if (elem+1) not in loc3[1]:
        non_empty_loc["3"].append(elem)
  if loc4[0].size > 0:
    for elem in loc4[1]:
      if (elem+1) not in loc4[1]:
        non_empty_loc["4"].append(elem)
  if loc5[0].size > 0:
    for elem in loc5[1]:
      if (elem+1) not in loc5[1]:
        non_empty_loc["5"].append(elem)
  if loc6[0].size > 0:
    for elem in loc6[1]:
      if (elem+1) not in loc6[1]:
        non_empty_loc["6"].append(elem)
  if loc7[0].size > 0:
    for elem in loc7[1]:
      if (elem+1) not in loc7[1]:
        non_empty_loc["7"].append(elem)
  if loc8[0].size > 0:
    for elem in loc8[1]:
      if (elem+1) not in loc8[1]:
        non_empty_loc["8"].append(elem)

  non_empty_loc_cleaned = {}

  for cle, valeur in non_empty_loc.items():
    for elem in valeur:
      non_empty_loc_cleaned[cle + str(elem)] = elem


  dic_sorted = dict(sorted(non_empty_loc_cleaned.items(), key=lambda item: item[1]))

  resultat_final = ""
  for cle,valeur in dic_sorted.items():
    resultat_final += cle[0]
  if len(resultat_final) > 4:
    resultat_final = resultat_final[1:]
  return(resultat_final)







def downloadfile(name,url):
    name=name+".mp4"
    r=requests.get(url,headers=headers)
    f=open(name,'wb');
    for chunk in r.iter_content(chunk_size=255): 
        if chunk: # filter out keep-alive new chunks
            f.write(chunk)
    f.close()


def get_video_link():
  r = requests.get(url,headers=headers)
  return("https://infinitemoneyglitch.chall.malicecyber.com" + r.text.split("<source")[1].split('"')[1])


def post_code(uuid,code):
  url = "https://infinitemoneyglitch.chall.malicecyber.com/validate"
  r = requests.post(url,headers=headers,json={"uuid" : uuid, "code" : code})
  print(r.text)

uuid_list = [0 for _ in range(50)]
code_list = [0 for _ in range(50)]

while True:

  for i in range(30):
    print(i)
    video_link = get_video_link()
    uuid_list[i] = video_link.replace("https://infinitemoneyglitch.chall.malicecyber.com/stream/","")
    downloadfile('test',video_link)
    code_list[i] =  (extract_code("test.mp4"))

  time.sleep(20)
  for i in range(30):
    post_code(uuid_list[i],code_list[i])


